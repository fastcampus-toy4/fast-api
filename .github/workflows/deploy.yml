# .github/workflows/deploy-fastapi.yml
name: Deploy FastAPI to Server

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/my-fastapi-app:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # ① buildx 캐시 디렉터리 복원
      - name: Restore buildx cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('Dockerfile','**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # ② Docker Buildx 설치 및 전용 빌더 생성
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Create buildx builder
        run: |
          docker buildx create --use --name mybuilder || true


      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}





      # ③ 이미지 빌드 & 푸시 (로컬 + 레지스트리 캐시)
      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: mybuilder
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache
            type=registry,ref=${{ env.IMAGE_NAME }}
          cache-to: |
            type=local,dest=/tmp/.buildx-cache,mode=max
            type=registry,ref=${{ env.IMAGE_NAME }},mode=max

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SERVER_IP }}
          username: ubuntu
          key:      ${{ secrets.SSH_PRIVATE_KEY }}
          port:     22
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" \
              | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            sudo docker rm -f fastapi-app || true
            sudo docker pull ${{ env.IMAGE_NAME }}
            sudo docker run -d \
              --name fastapi-app \
              -p 9000:9000 \
              --env-file /home/ubuntu/project/fastapi/.env \
              ${{ env.IMAGE_NAME }}
